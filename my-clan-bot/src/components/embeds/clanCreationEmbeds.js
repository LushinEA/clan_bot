const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const { COLORS, EMOJIS } = require('../../config');

function createProgressBar(currentStep, totalSteps = 4) {
    const filledBlocks = Math.round((currentStep / totalSteps) * 10);
    const emptyBlocks = 10 - filledBlocks;
    const progress = EMOJIS.PROGRESS_FILLED.repeat(filledBlocks) + EMOJIS.PROGRESS_EMPTY.repeat(emptyBlocks);
    const percentage = Math.round((currentStep / totalSteps) * 100);
    return `${progress} **${percentage}%**`;
}

function createMainEmbed() {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.CLAN} **–°–ò–°–¢–ï–ú–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ö–õ–ê–ù–û–í** ${EMOJIS.SPARKLES}`)
        .setDescription(`${EMOJIS.ROCKET} **–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞!**`)
        .setColor(COLORS.PREMIUM)
        .setImage('https://i.imgur.com/your-banner-image.png');

    const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
            .setCustomId('clan_create_start')
            .setLabel(`${EMOJIS.ROCKET} –°–û–ó–î–ê–¢–¨ –ö–õ–ê–ù`)
            .setStyle(ButtonStyle.Primary)
    );
    return { embeds: [embed], components: [button] };
}

function createStep1Embed(interaction) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.SHIELD} –®–ê–ì 1/4: –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø`)
        .setDescription(`${createProgressBar(1, 4)}\n\n–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç–µ–≥ –∏ –¥—Ä—É–≥–∏–µ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞.`)
        .setColor(COLORS.PRIMARY)
        .setFooter({ text: `–ó–∞—è–≤–∫–∞ –æ—Ç ${interaction.user.tag}`, iconURL: interaction.user.displayAvatarURL() });

    const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_step1_button').setLabel('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é').setStyle(ButtonStyle.Primary)
    );
    return { embeds: [embed], components: [button] };
}

function createStep2Embed(interaction, data) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.CROWN} –®–ê–ì 2/4: –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ì–õ–ê–í–ï`)
        .setDescription(`${createProgressBar(2, 4)}\n\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ –∫–∞–∫ –æ –≥–ª–∞–≤–µ –∫–ª–∞–Ω–∞.`)
        .setColor(COLORS.GOLD)
        .setFooter({ text: `–ö–ª–∞–Ω: ${data.tag} ${data.name}`, iconURL: interaction.user.displayAvatarURL() });
    
    const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_step2_button').setLabel('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≥–ª–∞–≤—ã').setStyle(ButtonStyle.Success)
    );
    return { embeds: [embed], components: [button] };
}

function createStep3Embed(interaction, data) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.USERS} –®–ê–ì 3/4: –°–û–°–¢–ê–í –ö–õ–ê–ù–ê`)
        .setDescription(`${createProgressBar(3, 4)}\n\n–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞.`)
        .setColor(COLORS.WARNING)
        .setFooter({ text: `–ö–ª–∞–Ω: ${data.tag} ${data.name}`, iconURL: interaction.user.displayAvatarURL() });

    const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_step3_button').setLabel('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–æ—Å—Ç–∞–≤').setStyle(ButtonStyle.Secondary)
    );
    return { embeds: [embed], components: [button] };
}

function createEmblemRequestEmbed(interaction, data) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.DIAMOND} –®–ê–ì 4/4: –≠–ú–ë–õ–ï–ú–ê –ö–õ–ê–ù–ê (–ù–ï–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û)`)
        .setDescription(`${createProgressBar(4, 4)}\n\n${EMOJIS.LOADING} **–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É —ç–º–±–ª–µ–º—ã —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.**\n–£ –≤–∞—Å –µ—Å—Ç—å 60 —Å–µ–∫—É–Ω–¥.\n\n–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç —ç–º–±–ª–µ–º—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å".`)
        .setColor(COLORS.PREMIUM)
        .setFooter({ text: `–ö–ª–∞–Ω: ${data.tag} ${data.name}`, iconURL: interaction.user.displayAvatarURL() });

    const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_emblem_skip').setLabel('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å').setStyle(ButtonStyle.Secondary)
    );
    return { embeds: [embed], components: [button] };
}


function createFinalConfirmationEmbed(interaction, session) {
    const { data } = session;
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.CLAN} **${data.tag} ${data.name}** | –ü–†–ï–î–ü–†–û–°–ú–û–¢–†`)
        .setColor(data.color)
        .addFields(
            { name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä', value: data.server, inline: true },
            { name: '–ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞', value: `${data.leader_nick} (<@${data.leader_discordid}>)`, inline: true }
        );
    
    if (data.emblem) {
        embed.setThumbnail(data.emblem);
    }
        
    const buttons = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_confirm').setLabel('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω').setStyle(ButtonStyle.Success),
        new ButtonBuilder().setCustomId('clan_create_edit').setLabel('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ').setStyle(ButtonStyle.Danger)
    );
    return { content: `**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ.**\n*–°–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞ –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤ –ª–æ–≥–∞—Ö –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.*`, embeds: [embed], components: [buttons] };
}

function createSuccessEmbed(interaction, data, newRole) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.SPARKLES} –ö–õ–ê–ù –£–°–ü–ï–®–ù–û –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù!`)
        .setDescription(`–í–∞—à –∫–ª–∞–Ω **${data.tag} ${data.name}** –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.\n\n–†–æ–ª—å <@&${newRole.id}> —Å–æ–∑–¥–∞–Ω–∞.`)
        .setColor(COLORS.SUCCESS);
    return { content: '', embeds: [embed], components: [] };
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–∞–≤ –≤ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫.
 * @param {string} rosterString - –°—ã—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.
 */
function formatRosterAsTextList(rosterString) {
    const lines = rosterString.split('\n').filter(l => l.trim());
    const formattedLines = [];

    formattedLines.push('**`No. | –ù–∏–∫–Ω–µ–π–º | Discord | Steam`**');

    for (let i = 0; i < lines.length; i++) {
        const parts = lines[i].split(',').map(p => p.trim());
        const nick = parts[0] || '`N/A`';
        const steamId = parts[1] || null;
        const discordId = parts[2] || null;

        const discordMention = /^\d{17,19}$/.test(discordId) ? `<@${discordId}>` : '`N/A`';
        const steamLink = /^\d{17}$/.test(steamId) ? `[–ü—Ä–æ—Ñ–∏–ª—å](https://steamcommunity.com/profiles/${steamId})` : '`N/A`';
        
        const row = `${i + 1}. **${nick}** | ${discordMention} | ${steamLink}`;
        formattedLines.push(row);
    }

    let output = formattedLines.join('\n');
    if (output.length > 1024) {
        output = output.slice(0, 1020) + '\n...';
    }

    return output;
}

/**
 * –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø –õ–û–ì-–°–û–û–ë–©–ï–ù–ò–Ø
 */
function createLogEmbed(interaction, session, newRole) {
    const { data } = session;
    
    const fullRosterString = `${data.leader_nick}, ${data.leader_steamid}, ${data.leader_discordid}\n${data.roster}`;
    const memberCount = fullRosterString.split('\n').filter(l => l.trim()).length;

    const embed = new EmbedBuilder()
        .setAuthor({ name: `–ö–ª–∞–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª: ${interaction.user.tag}`, iconURL: interaction.user.displayAvatarURL() })
        .setTitle(`‚úÖ –ù–æ–≤—ã–π –∫–ª–∞–Ω`)
        .setColor(data.color)
        .setDescription(
            `**–¢–µ–≥:** ${data.tag}\n` +
            `**–ù–∞–∑–≤–∞–Ω–∏–µ:** ${data.name}\n` +
            `**–°–æ–∑–¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å:** <@&${newRole.id}>`
        )
        .addFields(
            { name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä', value: data.server },
            { name: 'üëë –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ', value: `–ì–ª–∞–≤–∞: <@${data.leader_discordid}>` },
            { name: `üõ°Ô∏è –°–æ—Å—Ç–∞–≤ (${memberCount} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)`, value: formatRosterAsTextList(fullRosterString) }
        )
        .setTimestamp();
    
    if (data.emblem) {
        embed.setThumbnail(data.emblem);
    }
    return { embeds: [embed] };
}

module.exports = {
    createMainEmbed,
    createStep1Embed,
    createStep2Embed,
    createStep3Embed,
    createEmblemRequestEmbed,
    createFinalConfirmationEmbed,
    createSuccessEmbed,
    createLogEmbed,
};