const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, AttachmentBuilder } = require('discord.js');
const { COLORS, EMOJIS, CHANNELS, SERVERS } = require('../../config');
const path = require('path');

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã.
 * @returns {ButtonBuilder}
 */
function createCancelButton() {
    return new ButtonBuilder()
        .setCustomId('clan_create_cancel')
        .setLabel('–û—Ç–º–µ–Ω–∞')
        .setStyle(ButtonStyle.Danger);
}

function createProgressBar(currentStep, totalSteps = 4) {
    const filledBlocks = Math.round((currentStep / totalSteps) * 10);
    const emptyBlocks = 10 - filledBlocks;
    const progress = EMOJIS.PROGRESS_FILLED.repeat(filledBlocks) + EMOJIS.PROGRESS_EMPTY.repeat(emptyBlocks);
    const percentage = Math.round((currentStep / totalSteps) * 100);
    return `${progress} **${percentage}%**`;
}

function createMainEmbed() {
    const bannerPath = path.join(__dirname, '..', '..', 'data', 'banner_LVA.jpg');
    const bannerAttachment = new AttachmentBuilder(bannerPath, { name: 'banner_LVA.jpg' });

    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.CLAN} **–°–ò–°–¢–ï–ú–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–õ–ê–ù–ê–ú–ò** ${EMOJIS.SPARKLES}`)
        .setColor(COLORS.PREMIUM)
        .setDescription(
            `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∫–ª–∞–Ω–æ–≤!\n\n` +
            `**${EMOJIS.ROCKET} –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞.\n` +
            `**${EMOJIS.CROWN} –õ–∏–¥–µ—Ä—ã –∫–ª–∞–Ω–æ–≤:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–∞ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞.`
        )
        .addFields(
            {
                name: '‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ö–õ–ê–ù–£ (–ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)',
                value: '>>> ‚Ä¢ **–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤:** `5` –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–≤–∫–ª—é—á–∞—è –≥–ª–∞–≤—É).\n' +
                       '‚Ä¢ **–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å:** –ù–∞–∑–≤–∞–Ω–∏–µ, —Ç–µ–≥ –∏ HEX-–∫–æ–¥ —Ü–≤–µ—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω—ã –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª–∞–Ω—ã.',
                inline: false
            },
            {
                name: 'üìã –ß–¢–û –ù–£–ñ–ù–û –ü–û–î–ì–û–¢–û–í–ò–¢–¨ –î–õ–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò',
                value: '**1. –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n' +
                       '> ‚Ä¢ –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–≥ (2-7 —Å–∏–º–≤.)\n' +
                       '> ‚Ä¢ HEX-–∫–æ–¥ —Ü–≤–µ—Ç–∞ –¥–ª—è —Ä–æ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `FF5733`)\n' +
                       '> ‚Ä¢ –í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Å–µ—Ä–≤–µ—Ä\n\n' +
                       '**2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–ª–∞–≤–µ:**\n' +
                       '> ‚Ä¢ –í–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º\n' +
                       '> ‚Ä¢ –í–∞—à SteamID64 (*17 —Ü–∏—Ñ—Ä*)\n\n' +
                       '**3. –°–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞:**\n' +
                       '> ‚Ä¢ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏) –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n' +
                       '> `–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫, SteamID64, Discord ID`\n\n' +
                       '**4. –≠–º–±–ª–µ–º–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):**\n' +
                       '> ‚Ä¢ –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (PNG/JPG)',
                inline: false
            }
        )
        .setFooter({ text: '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ' })
        .setImage('attachment://banner_LVA.jpg'); 

    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const registrationRow = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
            .setCustomId('clan_create_start')
            .setLabel(`${EMOJIS.ROCKET} –ù–ê–ß–ê–¢–¨ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Æ`)
            .setStyle(ButtonStyle.Success)
    );

    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–Ω–æ–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏–¥–µ—Ä–æ–≤)
    const managementRow = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
            .setCustomId('clan_manage_edit_info')
            .setLabel('–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ')
            .setEmoji(EMOJIS.PENCIL)
            .setStyle(ButtonStyle.Primary),
        new ButtonBuilder()
            .setCustomId('clan_manage_edit_roster')
            .setLabel('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–∞–≤')
            .setEmoji(EMOJIS.USERS)
            .setStyle(ButtonStyle.Secondary),
        new ButtonBuilder()
            .setCustomId('clan_manage_delete')
            .setLabel('–†–∞—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω')
            .setStyle(ButtonStyle.Danger)
    );

    return { 
        embeds: [embed], 
        components: [registrationRow, managementRow], 
        files: [bannerAttachment] 
    };
}

function createStep1Embed(interaction) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.SHIELD} –®–ê–ì 1/4: –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø`)
        .setDescription(`${createProgressBar(1, 4)}\n\n–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç–µ–≥ –∏ –¥—Ä—É–≥–∏–µ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞.`)
        .setColor(COLORS.PRIMARY)
        .setFooter({ text: `–ó–∞—è–≤–∫–∞ –æ—Ç ${interaction.user.tag}`, iconURL: interaction.user.displayAvatarURL() });

    const buttons = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_step1_button').setLabel('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é').setStyle(ButtonStyle.Primary),
        createCancelButton()
    );
    return { embeds: [embed], components: [buttons] };
}

function createStep2Embed(interaction, data) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.CROWN} –®–ê–ì 2/4: –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ì–õ–ê–í–ï`)
        .setDescription(`${createProgressBar(2, 4)}\n\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ –∫–∞–∫ –æ –≥–ª–∞–≤–µ –∫–ª–∞–Ω–∞.`)
        .setColor(COLORS.GOLD)
        .setFooter({ text: `–ö–ª–∞–Ω: ${data.tag} ${data.name}`, iconURL: interaction.user.displayAvatarURL() });
    
    const buttons = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_step2_button').setLabel('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≥–ª–∞–≤—ã').setStyle(ButtonStyle.Success),
        createCancelButton()
    );
    return { embeds: [embed], components: [buttons] };
}

function createStep3Embed(interaction, data) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.USERS} –®–ê–ì 3/4: –°–û–°–¢–ê–í –ö–õ–ê–ù–ê`)
        .setDescription(`${createProgressBar(3, 4)}\n\n–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞.`)
        .setColor(COLORS.WARNING)
        .setFooter({ text: `–ö–ª–∞–Ω: ${data.tag} ${data.name}`, iconURL: interaction.user.displayAvatarURL() });

    const buttons = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_step3_button').setLabel('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–æ—Å—Ç–∞–≤').setStyle(ButtonStyle.Secondary),
        createCancelButton()
    );
    return { embeds: [embed], components: [buttons] };
}

function createEmblemRequestEmbed(interaction, data) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.DIAMOND} –®–ê–ì 4/4: –≠–ú–ë–õ–ï–ú–ê –ö–õ–ê–ù–ê (–ù–ï–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û)`)
        .setDescription(`${createProgressBar(4, 4)}\n\n${EMOJIS.LOADING} **–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É —ç–º–±–ª–µ–º—ã —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.**\n–£ –≤–∞—Å –µ—Å—Ç—å 60 —Å–µ–∫—É–Ω–¥.\n\n–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç —ç–º–±–ª–µ–º—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å".`)
        .setColor(COLORS.PREMIUM)
        .setFooter({ text: `–ö–ª–∞–Ω: ${data.tag} ${data.name}`, iconURL: interaction.user.displayAvatarURL() });

    const buttons = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_emblem_skip').setLabel('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å').setStyle(ButtonStyle.Secondary),
        createCancelButton()
    );
    return { embeds: [embed], components: [buttons] };
}

function createFinalConfirmationEmbed(interaction, session) {
    const { data } = session;
    const memberCount = 1 + (data.roster ? data.roster.split('\n').filter(l => l.trim()).length : 0);
    const steamLink = /^\d{17}$/.test(data.leader_steamid) ? `[–ü—Ä–æ—Ñ–∏–ª—å](https://steamcommunity.com/profiles/${data.leader_steamid})` : '`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID`';
    const serverName = SERVERS[data.server] || '–ù–µ —É–∫–∞–∑–∞–Ω'; // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ

    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.PENCIL} –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –ü–ï–†–ï–î –°–û–ó–î–ê–ù–ò–ï–ú`)
        .setColor(data.color)
        .setDescription(
            `**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.**\n` +
            `–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å –¥–ª—è –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞ –∏ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.`
        )
        .addFields(
            { name: '–ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Ç–µ–≥ –∫–ª–∞–Ω–∞', value: `**\`${data.tag}\` ${data.name}**`, inline: false },
            { name: '–¶–≤–µ—Ç —Ä–æ–ª–∏', value: `\`${data.color.toUpperCase()}\``, inline: true },
            { name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä', value: serverName, inline: true }, // –ò—Å–ø–æ–ª—å–∑—É–µ–º serverName
            { name: '–û–±—â–µ–µ –∫–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value: `\`${memberCount}\` —á–µ–ª.`, inline: true },
            { 
                name: `${EMOJIS.CROWN} –ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞`, 
                value: `**–ù–∏–∫:** ${data.leader_nick}\n**Discord:** <@${data.leader_discordid}>\n**Steam:** ${steamLink}`, 
                inline: false 
            }
        )
        .setFooter({ text: '–ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", –µ—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –∏–ª–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.' });
    
    if (data.emblem) {
        embed.setThumbnail(data.emblem);
    }
        
    const buttons = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('clan_create_confirm').setLabel('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å').setStyle(ButtonStyle.Success),
        new ButtonBuilder().setCustomId('clan_create_edit').setLabel('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å').setStyle(ButtonStyle.Primary),
        createCancelButton()
    );
    return { content: `**–§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∏–∂–µ.**\n*–ü–æ–ª–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞ –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –ª–æ–≥–∞—Ö.*`, embeds: [embed], components: [buttons] };
}

function createSuccessEmbed(interaction, data, newRole) {
    const embed = new EmbedBuilder()
        .setTitle(`${EMOJIS.ROCKET} –ö–õ–ê–ù "${data.name}" –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù!`)
        .setColor(COLORS.SUCCESS)
        .setDescription(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞! –í–æ—Ç —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:`
        )
        .addFields(
            { 
                name: '‚úÖ –†–æ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã', 
                value: `–°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å <@&${newRole.id}>. –û–Ω–∞ –±—ã–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞–Ω–∞ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∫–ª–∞–Ω–∞, –Ω–∞–π–¥–µ–Ω–Ω—ã–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n–í–∞–º, –∫–∞–∫ –≥–ª–∞–≤–µ, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å "–õ–∏–¥–µ—Ä –∫–ª–∞–Ω–∞".`,
                inline: false
            },
            {
                name: `${EMOJIS.PENCIL} –ß—Ç–æ –¥–∞–ª—å—à–µ?`,
                value: `1. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–µ—Å—Ç—Ä**: –í–∞—à –∫–ª–∞–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª <#${CHANNELS.CLAN_REGISTRY}>.\n` +
                       `2. **–ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏**: –ï—Å–ª–∏ –≤ –∫–ª–∞–Ω –≤—Å—Ç—É–ø–∞—é—Ç –Ω–æ–≤—ã–µ –∏–≥—Ä–æ–∫–∏, –æ–Ω–∏ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –≤ –∫–∞–Ω–∞–ª–µ <#${CHANNELS.CLAN_INSIGNIA}>.`,
                inline: false
            }
        )
        .setFooter({ text: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É!' });

    if (data.emblem) {
        embed.setThumbnail(data.emblem);
    }
    
    return { content: `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, <@${interaction.user.id}>!`, embeds: [embed], components: [] };
}

function formatRosterAsTextList(rosterString) {
    if (!rosterString) return '–°–æ—Å—Ç–∞–≤ –ø–æ–∫–∞ –ø—É—Å—Ç.';
    const lines = rosterString.split('\n').filter(l => l.trim());
    const formattedLines = [];

    for (let i = 0; i < lines.length; i++) {
        const parts = lines[i].split(',').map(p => p.trim());
        const nick = parts[0] || '`N/A`';
        const steamId = parts[1] || null;
        const discordId = parts[2] || null;

        const discordMention = /^\d{17,19}$/.test(discordId) ? `<@${discordId}>` : '`N/A`';
        const steamLink = /^\d{17}$/.test(steamId) ? `[–ü—Ä–æ—Ñ–∏–ª—å](https://steamcommunity.com/profiles/${steamId})` : '`N/A`';
        
        const row = `${i + 1}. **${nick}** | ${discordMention} | ${steamLink}`;
        formattedLines.push(row);
    }

    let output = formattedLines.join('\n');
    if (output.length > 1024) {
        output = output.slice(0, 1020) + '\n...';
    }

    return output;
}

function createLogEmbed(author, clanData, role) {

    const fullRosterString = `${clanData.leader_nick}, ${clanData.leader_steamid}, ${clanData.leader_discordid}\n${clanData.roster || ''}`;
    const memberCount = fullRosterString.split('\n').filter(l => l.trim()).length;
    const serverName = SERVERS[clanData.server] || '–ù–µ —É–∫–∞–∑–∞–Ω';

    const embed = new EmbedBuilder()
        .setAuthor({ name: `–ö–ª–∞–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª: ${author.tag}`, iconURL: author.displayAvatarURL ? author.displayAvatarURL() : author.iconURL })
        .setTitle(`‚úÖ –ù–æ–≤—ã–π –∫–ª–∞–Ω`)
        .setColor(clanData.color)
        .setDescription(
            `**–¢–µ–≥:** ${clanData.tag}\n` +
            `**–ù–∞–∑–≤–∞–Ω–∏–µ:** ${clanData.name}\n` +
            `**–°–æ–∑–¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å:** <@&${role.id}>`
        )
        .addFields(
            { name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä', value: serverName },
            { name: 'üëë –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ', value: `–ì–ª–∞–≤–∞: <@${clanData.leader_discordid}>` },
            { name: `üõ°Ô∏è –°–æ—Å—Ç–∞–≤ (${memberCount} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)`, value: formatRosterAsTextList(fullRosterString) }
        )
        .setTimestamp();
    
    if (clanData.emblem) {
        embed.setThumbnail(clanData.emblem);
    }
    return { embeds: [embed] };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç Embed –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞–Ω–µ –≤ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω–æ–º —Ä–µ–µ—Å—Ç—Ä–µ.
 * @param {object} clanData - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∞–Ω–∞ –∏–∑ MongoDB.
 * @returns {import('discord.js').EmbedBuilder}
 */
function createRegistryEmbed(clanData) {
    const fullRosterString = `${clanData.leader_nick}, ${clanData.leader_steamid}, ${clanData.leader_discordid}\n${clanData.roster || ''}`;
    const memberCount = fullRosterString.split('\n').filter(l => l.trim()).length;
    const serverName = SERVERS[clanData.server] || '–ù–µ —É–∫–∞–∑–∞–Ω';

    const embed = new EmbedBuilder()
        .setColor(clanData.color)
        .setTitle(`${EMOJIS.SHIELD} \`${clanData.tag}\` | ${clanData.name}`)
        .addFields(
            { name: `${EMOJIS.CROWN} –ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞`, value: `<@${clanData.leader_discordid}>`, inline: true },
            { name: `${EMOJIS.USERS} –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤`, value: `\`${memberCount}\` —á–µ–ª.`, inline: true },
            { name: `${EMOJIS.ROCKET} –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä`, value: `\`${serverName}\``, inline: true },
            { name: '–†–æ–ª—å –∫–ª–∞–Ω–∞', value: `<@&${clanData.roleId}>`, inline: false }
        )
        .setFooter({ text: `–ö–ª–∞–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date(clanData.createdAt).toLocaleDateString('ru-RU')}` });

    if (clanData.emblem) {
        embed.setThumbnail(clanData.emblem);
    }

    return embed;
}

module.exports = {
    createMainEmbed,
    createStep1Embed,
    createStep2Embed,
    createStep3Embed,
    createEmblemRequestEmbed,
    createFinalConfirmationEmbed,
    createSuccessEmbed,
    createLogEmbed,
    createRegistryEmbed,
};